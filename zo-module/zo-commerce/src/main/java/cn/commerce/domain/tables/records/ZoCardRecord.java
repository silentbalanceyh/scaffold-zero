/*
 * This file is generated by jOOQ.
 */
package cn.commerce.domain.tables.records;


import cn.commerce.domain.tables.ZoCard;
import cn.commerce.domain.tables.interfaces.IZoCard;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoCardRecord extends UpdatableRecordImpl<ZoCardRecord> implements VertxPojo, Record17<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Boolean, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime>, IZoCard {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ZoCardRecord setPkId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public ZoCardRecord setDAmount(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public BigDecimal getDAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.D_EXPIRED_TIME</code>.
     * 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public ZoCardRecord setDExpiredTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.D_EXPIRED_TIME</code>.
     * 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public LocalDateTime getDExpiredTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public ZoCardRecord setLPoint(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public Long getLPoint() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_CODE</code>. 编号,code,S_CODE
     */
    @Override
    public ZoCardRecord setSCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_CODE</code>. 编号,code,S_CODE
     */
    @Override
    public String getSCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public ZoCardRecord setSBatch(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public String getSBatch() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public ZoCardRecord setSNumber(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public String getSNumber() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.RLT_CARD_TYPE</code>.
     * 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public ZoCardRecord setRltCardType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.RLT_CARD_TYPE</code>.
     * 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public String getRltCardType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public ZoCardRecord setIsMajor(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public Boolean getIsMajor() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ZoCardRecord setJConfig(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ZoCardRecord setIsActive(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ZoCardRecord setZSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public ZoCardRecord setZLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public ZoCardRecord setZCreateBy(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public ZoCardRecord setZCreateTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public ZoCardRecord setZUpdateBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public ZoCardRecord setZUpdateTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return (LocalDateTime) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Boolean, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<String, BigDecimal, LocalDateTime, Long, String, String, String, String, Boolean, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ZoCard.ZO_CARD.PK_ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return ZoCard.ZO_CARD.D_AMOUNT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ZoCard.ZO_CARD.D_EXPIRED_TIME;
    }

    @Override
    public Field<Long> field4() {
        return ZoCard.ZO_CARD.L_POINT;
    }

    @Override
    public Field<String> field5() {
        return ZoCard.ZO_CARD.S_CODE;
    }

    @Override
    public Field<String> field6() {
        return ZoCard.ZO_CARD.S_BATCH;
    }

    @Override
    public Field<String> field7() {
        return ZoCard.ZO_CARD.S_NUMBER;
    }

    @Override
    public Field<String> field8() {
        return ZoCard.ZO_CARD.RLT_CARD_TYPE;
    }

    @Override
    public Field<Boolean> field9() {
        return ZoCard.ZO_CARD.IS_MAJOR;
    }

    @Override
    public Field<String> field10() {
        return ZoCard.ZO_CARD.J_CONFIG;
    }

    @Override
    public Field<Boolean> field11() {
        return ZoCard.ZO_CARD.IS_ACTIVE;
    }

    @Override
    public Field<String> field12() {
        return ZoCard.ZO_CARD.Z_SIGMA;
    }

    @Override
    public Field<String> field13() {
        return ZoCard.ZO_CARD.Z_LANGUAGE;
    }

    @Override
    public Field<String> field14() {
        return ZoCard.ZO_CARD.Z_CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return ZoCard.ZO_CARD.Z_CREATE_TIME;
    }

    @Override
    public Field<String> field16() {
        return ZoCard.ZO_CARD.Z_UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return ZoCard.ZO_CARD.Z_UPDATE_TIME;
    }

    @Override
    public String component1() {
        return getPkId();
    }

    @Override
    public BigDecimal component2() {
        return getDAmount();
    }

    @Override
    public LocalDateTime component3() {
        return getDExpiredTime();
    }

    @Override
    public Long component4() {
        return getLPoint();
    }

    @Override
    public String component5() {
        return getSCode();
    }

    @Override
    public String component6() {
        return getSBatch();
    }

    @Override
    public String component7() {
        return getSNumber();
    }

    @Override
    public String component8() {
        return getRltCardType();
    }

    @Override
    public Boolean component9() {
        return getIsMajor();
    }

    @Override
    public String component10() {
        return getJConfig();
    }

    @Override
    public Boolean component11() {
        return getIsActive();
    }

    @Override
    public String component12() {
        return getZSigma();
    }

    @Override
    public String component13() {
        return getZLanguage();
    }

    @Override
    public String component14() {
        return getZCreateBy();
    }

    @Override
    public LocalDateTime component15() {
        return getZCreateTime();
    }

    @Override
    public String component16() {
        return getZUpdateBy();
    }

    @Override
    public LocalDateTime component17() {
        return getZUpdateTime();
    }

    @Override
    public String value1() {
        return getPkId();
    }

    @Override
    public BigDecimal value2() {
        return getDAmount();
    }

    @Override
    public LocalDateTime value3() {
        return getDExpiredTime();
    }

    @Override
    public Long value4() {
        return getLPoint();
    }

    @Override
    public String value5() {
        return getSCode();
    }

    @Override
    public String value6() {
        return getSBatch();
    }

    @Override
    public String value7() {
        return getSNumber();
    }

    @Override
    public String value8() {
        return getRltCardType();
    }

    @Override
    public Boolean value9() {
        return getIsMajor();
    }

    @Override
    public String value10() {
        return getJConfig();
    }

    @Override
    public Boolean value11() {
        return getIsActive();
    }

    @Override
    public String value12() {
        return getZSigma();
    }

    @Override
    public String value13() {
        return getZLanguage();
    }

    @Override
    public String value14() {
        return getZCreateBy();
    }

    @Override
    public LocalDateTime value15() {
        return getZCreateTime();
    }

    @Override
    public String value16() {
        return getZUpdateBy();
    }

    @Override
    public LocalDateTime value17() {
        return getZUpdateTime();
    }

    @Override
    public ZoCardRecord value1(String value) {
        setPkId(value);
        return this;
    }

    @Override
    public ZoCardRecord value2(BigDecimal value) {
        setDAmount(value);
        return this;
    }

    @Override
    public ZoCardRecord value3(LocalDateTime value) {
        setDExpiredTime(value);
        return this;
    }

    @Override
    public ZoCardRecord value4(Long value) {
        setLPoint(value);
        return this;
    }

    @Override
    public ZoCardRecord value5(String value) {
        setSCode(value);
        return this;
    }

    @Override
    public ZoCardRecord value6(String value) {
        setSBatch(value);
        return this;
    }

    @Override
    public ZoCardRecord value7(String value) {
        setSNumber(value);
        return this;
    }

    @Override
    public ZoCardRecord value8(String value) {
        setRltCardType(value);
        return this;
    }

    @Override
    public ZoCardRecord value9(Boolean value) {
        setIsMajor(value);
        return this;
    }

    @Override
    public ZoCardRecord value10(String value) {
        setJConfig(value);
        return this;
    }

    @Override
    public ZoCardRecord value11(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public ZoCardRecord value12(String value) {
        setZSigma(value);
        return this;
    }

    @Override
    public ZoCardRecord value13(String value) {
        setZLanguage(value);
        return this;
    }

    @Override
    public ZoCardRecord value14(String value) {
        setZCreateBy(value);
        return this;
    }

    @Override
    public ZoCardRecord value15(LocalDateTime value) {
        setZCreateTime(value);
        return this;
    }

    @Override
    public ZoCardRecord value16(String value) {
        setZUpdateBy(value);
        return this;
    }

    @Override
    public ZoCardRecord value17(LocalDateTime value) {
        setZUpdateTime(value);
        return this;
    }

    @Override
    public ZoCardRecord values(String value1, BigDecimal value2, LocalDateTime value3, Long value4, String value5, String value6, String value7, String value8, Boolean value9, String value10, Boolean value11, String value12, String value13, String value14, LocalDateTime value15, String value16, LocalDateTime value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IZoCard from) {
        setPkId(from.getPkId());
        setDAmount(from.getDAmount());
        setDExpiredTime(from.getDExpiredTime());
        setLPoint(from.getLPoint());
        setSCode(from.getSCode());
        setSBatch(from.getSBatch());
        setSNumber(from.getSNumber());
        setRltCardType(from.getRltCardType());
        setIsMajor(from.getIsMajor());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    @Override
    public <E extends IZoCard> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZoCardRecord
     */
    public ZoCardRecord() {
        super(ZoCard.ZO_CARD);
    }

    /**
     * Create a detached, initialised ZoCardRecord
     */
    public ZoCardRecord(String pkId, BigDecimal dAmount, LocalDateTime dExpiredTime, Long lPoint, String sCode, String sBatch, String sNumber, String rltCardType, Boolean isMajor, String jConfig, Boolean isActive, String zSigma, String zLanguage, String zCreateBy, LocalDateTime zCreateTime, String zUpdateBy, LocalDateTime zUpdateTime) {
        super(ZoCard.ZO_CARD);

        setPkId(pkId);
        setDAmount(dAmount);
        setDExpiredTime(dExpiredTime);
        setLPoint(lPoint);
        setSCode(sCode);
        setSBatch(sBatch);
        setSNumber(sNumber);
        setRltCardType(rltCardType);
        setIsMajor(isMajor);
        setJConfig(jConfig);
        setIsActive(isActive);
        setZSigma(zSigma);
        setZLanguage(zLanguage);
        setZCreateBy(zCreateBy);
        setZCreateTime(zCreateTime);
        setZUpdateBy(zUpdateBy);
        setZUpdateTime(zUpdateTime);
    }

    /**
     * Create a detached, initialised ZoCardRecord
     */
    public ZoCardRecord(cn.commerce.domain.tables.pojos.ZoCard value) {
        super(ZoCard.ZO_CARD);

        if (value != null) {
            setPkId(value.getPkId());
            setDAmount(value.getDAmount());
            setDExpiredTime(value.getDExpiredTime());
            setLPoint(value.getLPoint());
            setSCode(value.getSCode());
            setSBatch(value.getSBatch());
            setSNumber(value.getSNumber());
            setRltCardType(value.getRltCardType());
            setIsMajor(value.getIsMajor());
            setJConfig(value.getJConfig());
            setIsActive(value.getIsActive());
            setZSigma(value.getZSigma());
            setZLanguage(value.getZLanguage());
            setZCreateBy(value.getZCreateBy());
            setZCreateTime(value.getZCreateTime());
            setZUpdateBy(value.getZUpdateBy());
            setZUpdateTime(value.getZUpdateTime());
        }
    }

        public ZoCardRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
