/*
 * This file is generated by jOOQ.
 */
package cn.commerce.domain.tables.pojos;


import cn.commerce.domain.tables.interfaces.IZoCard;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.math.BigDecimal;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoCard implements VertxPojo, IZoCard {

    private static final long serialVersionUID = 1L;

    private String pkId;
    private BigDecimal dAmount;
    private LocalDateTime dExpiredTime;
    private Long lPoint;
    private String sCode;
    private String sBatch;
    private String sNumber;
    private String rltCardType;
    private Boolean isMajor;
    private String jConfig;
    private Boolean isActive;
    private String zSigma;
    private String zLanguage;
    private String zCreateBy;
    private LocalDateTime zCreateTime;
    private String zUpdateBy;
    private LocalDateTime zUpdateTime;

    public ZoCard() {}

    public ZoCard(IZoCard value) {
        this.pkId = value.getPkId();
        this.dAmount = value.getDAmount();
        this.dExpiredTime = value.getDExpiredTime();
        this.lPoint = value.getLPoint();
        this.sCode = value.getSCode();
        this.sBatch = value.getSBatch();
        this.sNumber = value.getSNumber();
        this.rltCardType = value.getRltCardType();
        this.isMajor = value.getIsMajor();
        this.jConfig = value.getJConfig();
        this.isActive = value.getIsActive();
        this.zSigma = value.getZSigma();
        this.zLanguage = value.getZLanguage();
        this.zCreateBy = value.getZCreateBy();
        this.zCreateTime = value.getZCreateTime();
        this.zUpdateBy = value.getZUpdateBy();
        this.zUpdateTime = value.getZUpdateTime();
    }

    public ZoCard(
        String pkId,
        BigDecimal dAmount,
        LocalDateTime dExpiredTime,
        Long lPoint,
        String sCode,
        String sBatch,
        String sNumber,
        String rltCardType,
        Boolean isMajor,
        String jConfig,
        Boolean isActive,
        String zSigma,
        String zLanguage,
        String zCreateBy,
        LocalDateTime zCreateTime,
        String zUpdateBy,
        LocalDateTime zUpdateTime
    ) {
        this.pkId = pkId;
        this.dAmount = dAmount;
        this.dExpiredTime = dExpiredTime;
        this.lPoint = lPoint;
        this.sCode = sCode;
        this.sBatch = sBatch;
        this.sNumber = sNumber;
        this.rltCardType = rltCardType;
        this.isMajor = isMajor;
        this.jConfig = jConfig;
        this.isActive = isActive;
        this.zSigma = zSigma;
        this.zLanguage = zLanguage;
        this.zCreateBy = zCreateBy;
        this.zCreateTime = zCreateTime;
        this.zUpdateBy = zUpdateBy;
        this.zUpdateTime = zUpdateTime;
    }

        public ZoCard(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return this.pkId;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ZoCard setPkId(String pkId) {
        this.pkId = pkId;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public BigDecimal getDAmount() {
        return this.dAmount;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.D_AMOUNT</code>. 卡余额,amount,D_AMOUNT
     */
    @Override
    public ZoCard setDAmount(BigDecimal dAmount) {
        this.dAmount = dAmount;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.D_EXPIRED_TIME</code>.
     * 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public LocalDateTime getDExpiredTime() {
        return this.dExpiredTime;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.D_EXPIRED_TIME</code>.
     * 过期时间,expiredTime,D_EXPIRED_TIME
     */
    @Override
    public ZoCard setDExpiredTime(LocalDateTime dExpiredTime) {
        this.dExpiredTime = dExpiredTime;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public Long getLPoint() {
        return this.lPoint;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public ZoCard setLPoint(Long lPoint) {
        this.lPoint = lPoint;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_CODE</code>. 编号,code,S_CODE
     */
    @Override
    public String getSCode() {
        return this.sCode;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_CODE</code>. 编号,code,S_CODE
     */
    @Override
    public ZoCard setSCode(String sCode) {
        this.sCode = sCode;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public String getSBatch() {
        return this.sBatch;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_BATCH</code>. 批次,batch,S_BATCH
     */
    @Override
    public ZoCard setSBatch(String sBatch) {
        this.sBatch = sBatch;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public String getSNumber() {
        return this.sNumber;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.S_NUMBER</code>. 卡号,number,S_NUMBER
     */
    @Override
    public ZoCard setSNumber(String sNumber) {
        this.sNumber = sNumber;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.RLT_CARD_TYPE</code>.
     * 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public String getRltCardType() {
        return this.rltCardType;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.RLT_CARD_TYPE</code>.
     * 类型,cardType,RLT_CARD_TYPE
     */
    @Override
    public ZoCard setRltCardType(String rltCardType) {
        this.rltCardType = rltCardType;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public Boolean getIsMajor() {
        return this.isMajor;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.IS_MAJOR</code>. 主卡,major,IS_MAJOR
     */
    @Override
    public ZoCard setIsMajor(Boolean isMajor) {
        this.isMajor = isMajor;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return this.jConfig;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ZoCard setJConfig(String jConfig) {
        this.jConfig = jConfig;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ZoCard setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return this.zSigma;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ZoCard setZSigma(String zSigma) {
        this.zSigma = zSigma;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return this.zLanguage;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public ZoCard setZLanguage(String zLanguage) {
        this.zLanguage = zLanguage;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return this.zCreateBy;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public ZoCard setZCreateBy(String zCreateBy) {
        this.zCreateBy = zCreateBy;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return this.zCreateTime;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public ZoCard setZCreateTime(LocalDateTime zCreateTime) {
        this.zCreateTime = zCreateTime;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return this.zUpdateBy;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public ZoCard setZUpdateBy(String zUpdateBy) {
        this.zUpdateBy = zUpdateBy;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return this.zUpdateTime;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_CARD.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public ZoCard setZUpdateTime(LocalDateTime zUpdateTime) {
        this.zUpdateTime = zUpdateTime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ZoCard other = (ZoCard) obj;
        if (this.pkId == null) {
            if (other.pkId != null)
                return false;
        }
        else if (!this.pkId.equals(other.pkId))
            return false;
        if (this.dAmount == null) {
            if (other.dAmount != null)
                return false;
        }
        else if (!this.dAmount.equals(other.dAmount))
            return false;
        if (this.dExpiredTime == null) {
            if (other.dExpiredTime != null)
                return false;
        }
        else if (!this.dExpiredTime.equals(other.dExpiredTime))
            return false;
        if (this.lPoint == null) {
            if (other.lPoint != null)
                return false;
        }
        else if (!this.lPoint.equals(other.lPoint))
            return false;
        if (this.sCode == null) {
            if (other.sCode != null)
                return false;
        }
        else if (!this.sCode.equals(other.sCode))
            return false;
        if (this.sBatch == null) {
            if (other.sBatch != null)
                return false;
        }
        else if (!this.sBatch.equals(other.sBatch))
            return false;
        if (this.sNumber == null) {
            if (other.sNumber != null)
                return false;
        }
        else if (!this.sNumber.equals(other.sNumber))
            return false;
        if (this.rltCardType == null) {
            if (other.rltCardType != null)
                return false;
        }
        else if (!this.rltCardType.equals(other.rltCardType))
            return false;
        if (this.isMajor == null) {
            if (other.isMajor != null)
                return false;
        }
        else if (!this.isMajor.equals(other.isMajor))
            return false;
        if (this.jConfig == null) {
            if (other.jConfig != null)
                return false;
        }
        else if (!this.jConfig.equals(other.jConfig))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!this.isActive.equals(other.isActive))
            return false;
        if (this.zSigma == null) {
            if (other.zSigma != null)
                return false;
        }
        else if (!this.zSigma.equals(other.zSigma))
            return false;
        if (this.zLanguage == null) {
            if (other.zLanguage != null)
                return false;
        }
        else if (!this.zLanguage.equals(other.zLanguage))
            return false;
        if (this.zCreateBy == null) {
            if (other.zCreateBy != null)
                return false;
        }
        else if (!this.zCreateBy.equals(other.zCreateBy))
            return false;
        if (this.zCreateTime == null) {
            if (other.zCreateTime != null)
                return false;
        }
        else if (!this.zCreateTime.equals(other.zCreateTime))
            return false;
        if (this.zUpdateBy == null) {
            if (other.zUpdateBy != null)
                return false;
        }
        else if (!this.zUpdateBy.equals(other.zUpdateBy))
            return false;
        if (this.zUpdateTime == null) {
            if (other.zUpdateTime != null)
                return false;
        }
        else if (!this.zUpdateTime.equals(other.zUpdateTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.pkId == null) ? 0 : this.pkId.hashCode());
        result = prime * result + ((this.dAmount == null) ? 0 : this.dAmount.hashCode());
        result = prime * result + ((this.dExpiredTime == null) ? 0 : this.dExpiredTime.hashCode());
        result = prime * result + ((this.lPoint == null) ? 0 : this.lPoint.hashCode());
        result = prime * result + ((this.sCode == null) ? 0 : this.sCode.hashCode());
        result = prime * result + ((this.sBatch == null) ? 0 : this.sBatch.hashCode());
        result = prime * result + ((this.sNumber == null) ? 0 : this.sNumber.hashCode());
        result = prime * result + ((this.rltCardType == null) ? 0 : this.rltCardType.hashCode());
        result = prime * result + ((this.isMajor == null) ? 0 : this.isMajor.hashCode());
        result = prime * result + ((this.jConfig == null) ? 0 : this.jConfig.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.zSigma == null) ? 0 : this.zSigma.hashCode());
        result = prime * result + ((this.zLanguage == null) ? 0 : this.zLanguage.hashCode());
        result = prime * result + ((this.zCreateBy == null) ? 0 : this.zCreateBy.hashCode());
        result = prime * result + ((this.zCreateTime == null) ? 0 : this.zCreateTime.hashCode());
        result = prime * result + ((this.zUpdateBy == null) ? 0 : this.zUpdateBy.hashCode());
        result = prime * result + ((this.zUpdateTime == null) ? 0 : this.zUpdateTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ZoCard (");

        sb.append(pkId);
        sb.append(", ").append(dAmount);
        sb.append(", ").append(dExpiredTime);
        sb.append(", ").append(lPoint);
        sb.append(", ").append(sCode);
        sb.append(", ").append(sBatch);
        sb.append(", ").append(sNumber);
        sb.append(", ").append(rltCardType);
        sb.append(", ").append(isMajor);
        sb.append(", ").append(jConfig);
        sb.append(", ").append(isActive);
        sb.append(", ").append(zSigma);
        sb.append(", ").append(zLanguage);
        sb.append(", ").append(zCreateBy);
        sb.append(", ").append(zCreateTime);
        sb.append(", ").append(zUpdateBy);
        sb.append(", ").append(zUpdateTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IZoCard from) {
        setPkId(from.getPkId());
        setDAmount(from.getDAmount());
        setDExpiredTime(from.getDExpiredTime());
        setLPoint(from.getLPoint());
        setSCode(from.getSCode());
        setSBatch(from.getSBatch());
        setSNumber(from.getSNumber());
        setRltCardType(from.getRltCardType());
        setIsMajor(from.getIsMajor());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    @Override
    public <E extends IZoCard> E into(E into) {
        into.from(this);
        return into;
    }
}
