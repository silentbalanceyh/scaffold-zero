/*
 * This file is generated by jOOQ.
 */
package cn.commerce.domain.tables.pojos;


import cn.commerce.domain.tables.interfaces.IZoMember;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZoMember implements VertxPojo, IZoMember {

    private static final long serialVersionUID = 1L;

    private String pkId;
    private String rIdentityId;
    private String rCompanyId;
    private String rCardId;
    private Long lPoint;
    private String sProposer;
    private String sCode;
    private String rltMberLevel;
    private String rltMberStatus;
    private String sLicenseNum;
    private String sMobile;
    private String sNickname;
    private String sPhoto;
    private String sRealname;
    private LocalDateTime dBirthday;
    private Boolean isMale;
    private String jConfig;
    private Boolean isActive;
    private String zSigma;
    private String zLanguage;
    private String zCreateBy;
    private LocalDateTime zCreateTime;
    private String zUpdateBy;
    private LocalDateTime zUpdateTime;

    public ZoMember() {}

    public ZoMember(IZoMember value) {
        this.pkId = value.getPkId();
        this.rIdentityId = value.getRIdentityId();
        this.rCompanyId = value.getRCompanyId();
        this.rCardId = value.getRCardId();
        this.lPoint = value.getLPoint();
        this.sProposer = value.getSProposer();
        this.sCode = value.getSCode();
        this.rltMberLevel = value.getRltMberLevel();
        this.rltMberStatus = value.getRltMberStatus();
        this.sLicenseNum = value.getSLicenseNum();
        this.sMobile = value.getSMobile();
        this.sNickname = value.getSNickname();
        this.sPhoto = value.getSPhoto();
        this.sRealname = value.getSRealname();
        this.dBirthday = value.getDBirthday();
        this.isMale = value.getIsMale();
        this.jConfig = value.getJConfig();
        this.isActive = value.getIsActive();
        this.zSigma = value.getZSigma();
        this.zLanguage = value.getZLanguage();
        this.zCreateBy = value.getZCreateBy();
        this.zCreateTime = value.getZCreateTime();
        this.zUpdateBy = value.getZUpdateBy();
        this.zUpdateTime = value.getZUpdateTime();
    }

    public ZoMember(
        String pkId,
        String rIdentityId,
        String rCompanyId,
        String rCardId,
        Long lPoint,
        String sProposer,
        String sCode,
        String rltMberLevel,
        String rltMberStatus,
        String sLicenseNum,
        String sMobile,
        String sNickname,
        String sPhoto,
        String sRealname,
        LocalDateTime dBirthday,
        Boolean isMale,
        String jConfig,
        Boolean isActive,
        String zSigma,
        String zLanguage,
        String zCreateBy,
        LocalDateTime zCreateTime,
        String zUpdateBy,
        LocalDateTime zUpdateTime
    ) {
        this.pkId = pkId;
        this.rIdentityId = rIdentityId;
        this.rCompanyId = rCompanyId;
        this.rCardId = rCardId;
        this.lPoint = lPoint;
        this.sProposer = sProposer;
        this.sCode = sCode;
        this.rltMberLevel = rltMberLevel;
        this.rltMberStatus = rltMberStatus;
        this.sLicenseNum = sLicenseNum;
        this.sMobile = sMobile;
        this.sNickname = sNickname;
        this.sPhoto = sPhoto;
        this.sRealname = sRealname;
        this.dBirthday = dBirthday;
        this.isMale = isMale;
        this.jConfig = jConfig;
        this.isActive = isActive;
        this.zSigma = zSigma;
        this.zLanguage = zLanguage;
        this.zCreateBy = zCreateBy;
        this.zCreateTime = zCreateTime;
        this.zUpdateBy = zUpdateBy;
        this.zUpdateTime = zUpdateTime;
    }

        public ZoMember(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public String getPkId() {
        return this.pkId;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.PK_ID</code>. uniqueId,PK_ID
     */
    @Override
    public ZoMember setPkId(String pkId) {
        this.pkId = pkId;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.R_IDENTITY_ID</code>.
     * 「identityId」- 关联档案
     */
    @Override
    public String getRIdentityId() {
        return this.rIdentityId;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.R_IDENTITY_ID</code>.
     * 「identityId」- 关联档案
     */
    @Override
    public ZoMember setRIdentityId(String rIdentityId) {
        this.rIdentityId = rIdentityId;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.R_COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public String getRCompanyId() {
        return this.rCompanyId;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.R_COMPANY_ID</code>. 「companyId」-
     * 所属公司
     */
    @Override
    public ZoMember setRCompanyId(String rCompanyId) {
        this.rCompanyId = rCompanyId;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.R_CARD_ID</code>. 「cardId」- 绑定卡
     */
    @Override
    public String getRCardId() {
        return this.rCardId;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.R_CARD_ID</code>. 「cardId」- 绑定卡
     */
    @Override
    public ZoMember setRCardId(String rCardId) {
        this.rCardId = rCardId;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public Long getLPoint() {
        return this.lPoint;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.L_POINT</code>. 积分,point,L_POINT
     */
    @Override
    public ZoMember setLPoint(Long lPoint) {
        this.lPoint = lPoint;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_PROPOSER</code>.
     * 推荐人,proposer,S_PROPOSER
     */
    @Override
    public String getSProposer() {
        return this.sProposer;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_PROPOSER</code>.
     * 推荐人,proposer,S_PROPOSER
     */
    @Override
    public ZoMember setSProposer(String sProposer) {
        this.sProposer = sProposer;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_CODE</code>. 会员编号,code,S_CODE
     */
    @Override
    public String getSCode() {
        return this.sCode;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_CODE</code>. 会员编号,code,S_CODE
     */
    @Override
    public ZoMember setSCode(String sCode) {
        this.sCode = sCode;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.RLT_MBER_LEVEL</code>.
     * 会员等级,level,RLT_MBER_LEVEL
     */
    @Override
    public String getRltMberLevel() {
        return this.rltMberLevel;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.RLT_MBER_LEVEL</code>.
     * 会员等级,level,RLT_MBER_LEVEL
     */
    @Override
    public ZoMember setRltMberLevel(String rltMberLevel) {
        this.rltMberLevel = rltMberLevel;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.RLT_MBER_STATUS</code>.
     * 会员状态,status,RLT_MBER_STATUS
     */
    @Override
    public String getRltMberStatus() {
        return this.rltMberStatus;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.RLT_MBER_STATUS</code>.
     * 会员状态,status,RLT_MBER_STATUS
     */
    @Override
    public ZoMember setRltMberStatus(String rltMberStatus) {
        this.rltMberStatus = rltMberStatus;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_LICENSE_NUM</code>.
     * 驾驶证,licenseNumber,S_LICENSE_NUM
     */
    @Override
    public String getSLicenseNum() {
        return this.sLicenseNum;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_LICENSE_NUM</code>.
     * 驾驶证,licenseNumber,S_LICENSE_NUM
     */
    @Override
    public ZoMember setSLicenseNum(String sLicenseNum) {
        this.sLicenseNum = sLicenseNum;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_MOBILE</code>.
     * 手机号,mobile,S_MOBILE
     */
    @Override
    public String getSMobile() {
        return this.sMobile;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_MOBILE</code>.
     * 手机号,mobile,S_MOBILE
     */
    @Override
    public ZoMember setSMobile(String sMobile) {
        this.sMobile = sMobile;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_NICKNAME</code>.
     * 昵称,nickname,S_NICKNAME
     */
    @Override
    public String getSNickname() {
        return this.sNickname;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_NICKNAME</code>.
     * 昵称,nickname,S_NICKNAME
     */
    @Override
    public ZoMember setSNickname(String sNickname) {
        this.sNickname = sNickname;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_PHOTO</code>. 头像,photo,S_PHOTO
     */
    @Override
    public String getSPhoto() {
        return this.sPhoto;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_PHOTO</code>. 头像,photo,S_PHOTO
     */
    @Override
    public ZoMember setSPhoto(String sPhoto) {
        this.sPhoto = sPhoto;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.S_REALNAME</code>.
     * 姓名,realname,S_REALNAME
     */
    @Override
    public String getSRealname() {
        return this.sRealname;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.S_REALNAME</code>.
     * 姓名,realname,S_REALNAME
     */
    @Override
    public ZoMember setSRealname(String sRealname) {
        this.sRealname = sRealname;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.D_BIRTHDAY</code>.
     * 生日,birthday,D_BIRTHDAY
     */
    @Override
    public LocalDateTime getDBirthday() {
        return this.dBirthday;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.D_BIRTHDAY</code>.
     * 生日,birthday,D_BIRTHDAY
     */
    @Override
    public ZoMember setDBirthday(LocalDateTime dBirthday) {
        this.dBirthday = dBirthday;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.IS_MALE</code>.
     * 男？true为男，false为女,male,IS_MALE
     */
    @Override
    public Boolean getIsMale() {
        return this.isMale;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.IS_MALE</code>.
     * 男？true为男，false为女,male,IS_MALE
     */
    @Override
    public ZoMember setIsMale(Boolean isMale) {
        this.isMale = isMale;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public String getJConfig() {
        return this.jConfig;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.J_CONFIG</code>. config,J_CONFIG
     */
    @Override
    public ZoMember setJConfig(String jConfig) {
        this.jConfig = jConfig;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.IS_ACTIVE</code>. active,IS_ACTIVE
     */
    @Override
    public ZoMember setIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public String getZSigma() {
        return this.zSigma;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_SIGMA</code>. sigma,Z_SIGMA
     */
    @Override
    public ZoMember setZSigma(String zSigma) {
        this.zSigma = zSigma;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public String getZLanguage() {
        return this.zLanguage;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_LANGUAGE</code>.
     * language,Z_LANGUAGE
     */
    @Override
    public ZoMember setZLanguage(String zLanguage) {
        this.zLanguage = zLanguage;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public String getZCreateBy() {
        return this.zCreateBy;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_CREATE_BY</code>.
     * createBy,Z_CREATE_BY
     */
    @Override
    public ZoMember setZCreateBy(String zCreateBy) {
        this.zCreateBy = zCreateBy;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public LocalDateTime getZCreateTime() {
        return this.zCreateTime;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_CREATE_TIME</code>.
     * createTime,Z_CREATE_TIME
     */
    @Override
    public ZoMember setZCreateTime(LocalDateTime zCreateTime) {
        this.zCreateTime = zCreateTime;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public String getZUpdateBy() {
        return this.zUpdateBy;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_UPDATE_BY</code>.
     * updateBy,Z_UPDATE_BY
     */
    @Override
    public ZoMember setZUpdateBy(String zUpdateBy) {
        this.zUpdateBy = zUpdateBy;
        return this;
    }

    /**
     * Getter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public LocalDateTime getZUpdateTime() {
        return this.zUpdateTime;
    }

    /**
     * Setter for <code>DB_SCAFFOLD.ZO_MEMBER.Z_UPDATE_TIME</code>.
     * updateTime,Z_UPDATE_TIME
     */
    @Override
    public ZoMember setZUpdateTime(LocalDateTime zUpdateTime) {
        this.zUpdateTime = zUpdateTime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ZoMember other = (ZoMember) obj;
        if (this.pkId == null) {
            if (other.pkId != null)
                return false;
        }
        else if (!this.pkId.equals(other.pkId))
            return false;
        if (this.rIdentityId == null) {
            if (other.rIdentityId != null)
                return false;
        }
        else if (!this.rIdentityId.equals(other.rIdentityId))
            return false;
        if (this.rCompanyId == null) {
            if (other.rCompanyId != null)
                return false;
        }
        else if (!this.rCompanyId.equals(other.rCompanyId))
            return false;
        if (this.rCardId == null) {
            if (other.rCardId != null)
                return false;
        }
        else if (!this.rCardId.equals(other.rCardId))
            return false;
        if (this.lPoint == null) {
            if (other.lPoint != null)
                return false;
        }
        else if (!this.lPoint.equals(other.lPoint))
            return false;
        if (this.sProposer == null) {
            if (other.sProposer != null)
                return false;
        }
        else if (!this.sProposer.equals(other.sProposer))
            return false;
        if (this.sCode == null) {
            if (other.sCode != null)
                return false;
        }
        else if (!this.sCode.equals(other.sCode))
            return false;
        if (this.rltMberLevel == null) {
            if (other.rltMberLevel != null)
                return false;
        }
        else if (!this.rltMberLevel.equals(other.rltMberLevel))
            return false;
        if (this.rltMberStatus == null) {
            if (other.rltMberStatus != null)
                return false;
        }
        else if (!this.rltMberStatus.equals(other.rltMberStatus))
            return false;
        if (this.sLicenseNum == null) {
            if (other.sLicenseNum != null)
                return false;
        }
        else if (!this.sLicenseNum.equals(other.sLicenseNum))
            return false;
        if (this.sMobile == null) {
            if (other.sMobile != null)
                return false;
        }
        else if (!this.sMobile.equals(other.sMobile))
            return false;
        if (this.sNickname == null) {
            if (other.sNickname != null)
                return false;
        }
        else if (!this.sNickname.equals(other.sNickname))
            return false;
        if (this.sPhoto == null) {
            if (other.sPhoto != null)
                return false;
        }
        else if (!this.sPhoto.equals(other.sPhoto))
            return false;
        if (this.sRealname == null) {
            if (other.sRealname != null)
                return false;
        }
        else if (!this.sRealname.equals(other.sRealname))
            return false;
        if (this.dBirthday == null) {
            if (other.dBirthday != null)
                return false;
        }
        else if (!this.dBirthday.equals(other.dBirthday))
            return false;
        if (this.isMale == null) {
            if (other.isMale != null)
                return false;
        }
        else if (!this.isMale.equals(other.isMale))
            return false;
        if (this.jConfig == null) {
            if (other.jConfig != null)
                return false;
        }
        else if (!this.jConfig.equals(other.jConfig))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!this.isActive.equals(other.isActive))
            return false;
        if (this.zSigma == null) {
            if (other.zSigma != null)
                return false;
        }
        else if (!this.zSigma.equals(other.zSigma))
            return false;
        if (this.zLanguage == null) {
            if (other.zLanguage != null)
                return false;
        }
        else if (!this.zLanguage.equals(other.zLanguage))
            return false;
        if (this.zCreateBy == null) {
            if (other.zCreateBy != null)
                return false;
        }
        else if (!this.zCreateBy.equals(other.zCreateBy))
            return false;
        if (this.zCreateTime == null) {
            if (other.zCreateTime != null)
                return false;
        }
        else if (!this.zCreateTime.equals(other.zCreateTime))
            return false;
        if (this.zUpdateBy == null) {
            if (other.zUpdateBy != null)
                return false;
        }
        else if (!this.zUpdateBy.equals(other.zUpdateBy))
            return false;
        if (this.zUpdateTime == null) {
            if (other.zUpdateTime != null)
                return false;
        }
        else if (!this.zUpdateTime.equals(other.zUpdateTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.pkId == null) ? 0 : this.pkId.hashCode());
        result = prime * result + ((this.rIdentityId == null) ? 0 : this.rIdentityId.hashCode());
        result = prime * result + ((this.rCompanyId == null) ? 0 : this.rCompanyId.hashCode());
        result = prime * result + ((this.rCardId == null) ? 0 : this.rCardId.hashCode());
        result = prime * result + ((this.lPoint == null) ? 0 : this.lPoint.hashCode());
        result = prime * result + ((this.sProposer == null) ? 0 : this.sProposer.hashCode());
        result = prime * result + ((this.sCode == null) ? 0 : this.sCode.hashCode());
        result = prime * result + ((this.rltMberLevel == null) ? 0 : this.rltMberLevel.hashCode());
        result = prime * result + ((this.rltMberStatus == null) ? 0 : this.rltMberStatus.hashCode());
        result = prime * result + ((this.sLicenseNum == null) ? 0 : this.sLicenseNum.hashCode());
        result = prime * result + ((this.sMobile == null) ? 0 : this.sMobile.hashCode());
        result = prime * result + ((this.sNickname == null) ? 0 : this.sNickname.hashCode());
        result = prime * result + ((this.sPhoto == null) ? 0 : this.sPhoto.hashCode());
        result = prime * result + ((this.sRealname == null) ? 0 : this.sRealname.hashCode());
        result = prime * result + ((this.dBirthday == null) ? 0 : this.dBirthday.hashCode());
        result = prime * result + ((this.isMale == null) ? 0 : this.isMale.hashCode());
        result = prime * result + ((this.jConfig == null) ? 0 : this.jConfig.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.zSigma == null) ? 0 : this.zSigma.hashCode());
        result = prime * result + ((this.zLanguage == null) ? 0 : this.zLanguage.hashCode());
        result = prime * result + ((this.zCreateBy == null) ? 0 : this.zCreateBy.hashCode());
        result = prime * result + ((this.zCreateTime == null) ? 0 : this.zCreateTime.hashCode());
        result = prime * result + ((this.zUpdateBy == null) ? 0 : this.zUpdateBy.hashCode());
        result = prime * result + ((this.zUpdateTime == null) ? 0 : this.zUpdateTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ZoMember (");

        sb.append(pkId);
        sb.append(", ").append(rIdentityId);
        sb.append(", ").append(rCompanyId);
        sb.append(", ").append(rCardId);
        sb.append(", ").append(lPoint);
        sb.append(", ").append(sProposer);
        sb.append(", ").append(sCode);
        sb.append(", ").append(rltMberLevel);
        sb.append(", ").append(rltMberStatus);
        sb.append(", ").append(sLicenseNum);
        sb.append(", ").append(sMobile);
        sb.append(", ").append(sNickname);
        sb.append(", ").append(sPhoto);
        sb.append(", ").append(sRealname);
        sb.append(", ").append(dBirthday);
        sb.append(", ").append(isMale);
        sb.append(", ").append(jConfig);
        sb.append(", ").append(isActive);
        sb.append(", ").append(zSigma);
        sb.append(", ").append(zLanguage);
        sb.append(", ").append(zCreateBy);
        sb.append(", ").append(zCreateTime);
        sb.append(", ").append(zUpdateBy);
        sb.append(", ").append(zUpdateTime);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IZoMember from) {
        setPkId(from.getPkId());
        setRIdentityId(from.getRIdentityId());
        setRCompanyId(from.getRCompanyId());
        setRCardId(from.getRCardId());
        setLPoint(from.getLPoint());
        setSProposer(from.getSProposer());
        setSCode(from.getSCode());
        setRltMberLevel(from.getRltMberLevel());
        setRltMberStatus(from.getRltMberStatus());
        setSLicenseNum(from.getSLicenseNum());
        setSMobile(from.getSMobile());
        setSNickname(from.getSNickname());
        setSPhoto(from.getSPhoto());
        setSRealname(from.getSRealname());
        setDBirthday(from.getDBirthday());
        setIsMale(from.getIsMale());
        setJConfig(from.getJConfig());
        setIsActive(from.getIsActive());
        setZSigma(from.getZSigma());
        setZLanguage(from.getZLanguage());
        setZCreateBy(from.getZCreateBy());
        setZCreateTime(from.getZCreateTime());
        setZUpdateBy(from.getZUpdateBy());
        setZUpdateTime(from.getZUpdateTime());
    }

    @Override
    public <E extends IZoMember> E into(E into) {
        into.from(this);
        return into;
    }
}
